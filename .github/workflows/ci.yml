name: CI Pipeline

on:
  push:
    branches:
      - main
      - dev
  pull_request:
    branches:
      - main
      - dev

jobs:
  backend-tests:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./src/data_ingestion

    services:
      rabbitmq:
        image: rabbitmq:3.12-management
        ports:
          - 5672:5672
          - 15672:15672

    env:
      RABBITMQ_HOST: ${{ secrets.RABBITMQ_HOST }}
      RABBITMQ_QUEUE: ${{ secrets.RABBITMQ_QUEUE }}
      SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
      SUPABASE_API_KEY: ${{ secrets.SUPABASE_API_KEY }}
      CLICKHOUSE_HOST: ${{ secrets.CLICKHOUSE_HOST }}
      CLICKHOUSE_USER: ${{ secrets.CLICKHOUSE_USER }}
      CLICKHOUSE_PASSWORD: ${{ secrets.CLICKHOUSE_PASSWORD }}
      CLICKHOUSE_SECURE: ${{ secrets.CLICKHOUSE_SECURE }}
      CLICKHOUSE_TABLE: ${{ secrets.CLICKHOUSE_TABLE }}

    steps:
      - uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Poetry and Dependencies
        run: |
          pip install poetry
          poetry config virtualenvs.create false
          poetry install --no-interaction --no-ansi

      - name: Run Unit Tests
        run: |
          poetry run pytest tests/

  frontend-build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./src/frontend
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install Dependencies
        run: npm install --legacy-peer-deps

      - name: Run Next.js build
        run: npm run build
